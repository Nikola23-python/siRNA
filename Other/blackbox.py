# def range_sequence(self):
    #     """–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–µ–∑–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –†–ù–ö –ø–æ –∑–∞–¥–∞–≤–∞–µ–º–æ–º—É –¥–∏–∞–ø–∞–∑–æ–Ω—É"""
    #     # start = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å: "))
    #     # end = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—ã–π –∏–Ω–¥–µ–∫—Å: "))
    #     # seq1 = self.sequence[start:end]
    #     # print(f"–°—Ä–µ–∑ –æ—Ç {start} –¥–æ {end}:")
    #     # print(seq1)
    #     # print(f"–î–ª–∏–Ω–∞ —Å—Ä–µ–∑–∞: {len(seq1)}")
    #      = self.sequence[781:2858]
    #     return


        # df = pd.DataFrame(fragments_list)
        #
        # df.to_csv(filename, index=False, encoding='utf-8')
        #
        # print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {filename}")
        # print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        # print(f"   - –í—Å–µ–≥–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤: {len(df)}")
        # print(f"   - –î–∏–∞–ø–∞–∑–æ–Ω —Ä–∞–∑–º–µ—Ä–æ–≤: {start_size}-{end_size} –Ω—Ç")
        # print(f"   - –†–∞–∑–º–µ—Ä—ã –≤ —Ñ–∞–π–ª–µ: {df['size_nt':fra].unique()}")

def smart_merge_csv(files_list, output_file):
    """
    –£–º–Ω–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ –æ–±—â–∏–º —Å—Ç–æ–ª–±—Ü–∞–º
    """
    dataframes = []

    for file_path in files_list:
        if os.path.exists(file_path):
            df = pd.read_csv(file_path)
            dataframes.append(df)
            print(f"–ó–∞–≥—Ä—É–∂–µ–Ω {file_path}: {df.shape}")
        else:
            print(f"–§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")

    if not dataframes:
        print("–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è")
        return

    # –ù–∞—Ö–æ–¥–∏–º –æ–±—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã
    common_columns = set(dataframes[0].columns)
    for df in dataframes[1:]:
        common_columns = common_columns.intersection(set(df.columns))

    print(f"–û–±—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã: {list(common_columns)}")

    if not common_columns:
        print("–ù–µ—Ç –æ–±—â–∏—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è")
        return

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –ø–æ –æ–±—â–∏–º —Å—Ç–æ–ª–±—Ü–∞–º
    merged_df = dataframes[0]
    for df in dataframes[1:]:
        merged_df = pd.merge(merged_df, df, on=list(common_columns), how='outer')

    merged_df.to_csv(output_file, index=False)
    print(f"–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {output_file}")
    return merged_df